-- Simple obfuscated Lua script for testing

local a=function(b,c)local d=""for e=1,#b do d=d..string.char(string.byte(b,e)~c)end return d end
local f=a("\x1b\x0f\x0c\x0c\x11\x68\x75\x11\x16\x0c\x08",23)
local g=a("\x04\x11\x16\x0c\x08",23)
local h={f,g}
for i,j in pairs(h)do print(j)end

-- Another example with base64-like encoding
local k="SGVsbG8gV29ybGQ="
local l=function(m)return m:reverse()end
local n=l("!dlroW olleH")

-- Control flow obfuscation
local o=math.random()
if o>0.5 then
local p=a("\x0e\x17\x0f",23)
print(p)
else
local q=a("\x02\x17\x0f",23)
print(q)
end

-- Table with obfuscated keys
local r={[a("\x0a\x0f\x17",23)]=1,[a("\x1a\x76\x11",23)]=2}
for s,t in pairs(r)do print(s,t)end
